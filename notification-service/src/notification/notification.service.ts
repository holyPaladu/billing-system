import { Injectable, OnModuleInit } from '@nestjs/common';
import { MessagePattern, Payload } from '@nestjs/microservices';

@Injectable()
export class NotificationService implements OnModuleInit {
  // constructor(private readonly emailService: EmailService) {}

  async onModuleInit() {
    console.log('üì© Notification Service –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏–µ–º—É Kafka —Å–æ–æ–±—â–µ–Ω–∏–π...');
  }

  // üìå –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∏–∑ Kafka (user_registered)
  @MessagePattern('user_registered')
  async handleUserRegistered(@Payload() email: string) {
    console.log('üì• –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ Kafka:', email);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email
    // await this.emailService.sendEmail(
    //   user.email,
    //   'Welcome!',
    //   `–ü—Ä–∏–≤–µ—Ç, ${user.name}! –°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!`,
    // );

    console.log(`üìß Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞: ${email}`);
  }
}
